#!/usr/bin/lua

local platform_info = require('platform_info')
local uci = require('simple-uci').cursor()
local util = require 'gluon.util'

if string.match(platform_info.get_image_name(), "archer%-c7") or string.match(platform_info.get_image_name(), "tl%-wdr") or string.match(platform_info.get_image_name(), "zbt%-wg3526%-32m") then
  if string.match(platform_info.get_image_name(), "zbt%-wg3526%-32m") then
    uci:set('network','@switch_vlan[0]','ports','0 6t')
  else
    uci:set('network','@switch_vlan[0]','ports','2 0t')
  end

  uci:delete('network', 'switch_mesh2')
  uci:delete('network', 'switch_mesh3')
  uci:delete('network', 'switch_mesh4')

  if string.match(platform_info.get_image_name(), "zbt%-wg3526%-32m") then
    uci:section('network', 'switch_vlan', 'switch_mesh2', {
      device = 'switch0',
      vlan = '3',
      ports = '1 6t',
    })
    uci:section('network', 'switch_vlan', 'switch_mesh3', {
      device = 'switch0',
      vlan = '4',
      ports = '2 6t',
    })
    uci:section('network', 'switch_vlan', 'switch_mesh4', {
      device = 'switch0',
      vlan = '5',
      ports = '3 6t',
    })
  else
    uci:section('network', 'switch_vlan', 'switch_mesh2', {
      device = 'switch0',
      vlan = '3',
      ports = '3 0t',
    })
    uci:section('network', 'switch_vlan', 'switch_mesh3', {
      device = 'switch0',
      vlan = '4',
      ports = '4 0t',
    })
    uci:section('network', 'switch_vlan', 'switch_mesh4', {
      device = 'switch0',
      vlan = '5',
      ports = '5 0t',
    })
  end


  local eth = 'eth0'
  if string.match(platform_info.get_image_name(), "archer%-c7") then
    eth = 'eth1'
  end


for i = 2,4,1 
do 
  uci:delete('network', 'mesh_lan'..i)
  -- https://forum.darmstadt.freifunk.net/t/multidomain-migration-von-nodes-mit-mehreren-vlan-interfaces/600?u=hexa
  uci:delete('firewall', 'mesh_c_lan'..i)
  uci:delete('firewall', 'mesh_c_lan'..i..'_ICMPv6_in')
  uci:delete('firewall', 'mesh_c_lan'..i..'_vxlan')

  uci:section('firewall', 'zone', 'mesh_c_lan'..i, {
    name = 'mesh_c_lan'..i,
    input = 'REJECT',
    forward = 'REJECT',
    output = 'ACCEPT',
    network = {'mesh_lan'..i},
  })
  uci:section('firewall', 'rule', 'mesh_c_lan'..i..'_ICMPv6_in', {
    src = 'mesh_c_lan'..i,
    limit = '1000/sec',
    family = 'ipv6',
    target = 'ACCEPT',
    proto = 'icmp',
  })
  uci:section('firewall', 'rule', 'mesh_c_lan'..i..'_vxlan', {
    name = 'mesh_c_lan'..i..'_vxlan',
    dest_port = '4789',
    src = 'mesh_c_lan'..i,
    src_ip = 'fe80::/64',
    family = 'ipv6',
    target = 'ACCEPT',
    proto = 'udp',
  })
end

  uci:section('network', 'interface', 'mesh_lan2', {
    ifname = eth..'.3',
    proto = 'gluon_wired',
    igmp_snooping = '0',
    index = '5',
    disabled ='0',
    transitive = '1',
    macaddr = util.generate_mac(5),
  })
  uci:section('network', 'interface', 'mesh_lan3', {
    ifname = eth..'.4',
    proto = 'gluon_wired',
    index = '6',
    igmp_snooping = '0',
    disabled ='0',
    transitive = '1',
    macaddr = util.generate_mac(6),
  })
  uci:section('network', 'interface', 'mesh_lan4', {
    ifname = eth..'.5',
    index = '7',
    proto = 'gluon_wired',
    igmp_snooping = '0',
    disabled ='0',
    transitive = '1',
    macaddr = util.generate_mac(1),
  })

  uci:save('network')

  uci:save('firewall')
end
