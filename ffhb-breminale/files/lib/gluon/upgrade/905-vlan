#!/usr/bin/lua

local platform_info = require('platform_info')
local uci = require('simple-uci').cursor()
local util = require 'gluon.util'
local site = require 'gluon.site'

if string.match(platform_info.get_image_name(), "archer%-c7") or string.match(platform_info.get_image_name(), "tl%-wdr") or string.match(platform_info.get_image_name(), "zbt%-wg3526%-32m") then


  local eth = 'eth0'
  local portlist = '0t 1t 2t 3t 4t 5t'

  if string.match(platform_info.get_image_name(), "archer%-c7") then
    eth = 'eth1'
  end

  if string.match(platform_info.get_image_name(), "zbt%-wg3526%-32m") then
    portlist = '0t 1t 2t 3t 6t'
  end
  
  -- config wan to client (vlan 3)
   uci:section('network', 'interface', 'client', {
       ipv6 = true,
       proto = 'dhcpv6',
       reqprefix = 'no',
       peerdns = not site.dns.servers(),
       sourcefilter = false,
       keep_ra_dnslifetime = true,
       robustness = 9,
       query_interval = 2000,
       query_response_interval = 500,
       ifname = {
          eth..'.3',
         'local-port',
      },
  })
  uci:delete('network', 'client_lan')

  uci:delete('network', 'local_node_route')

  uci:delete('network', 'local_node_route6')
  uci:section('network', 'route6', 'local_node_route6', {
      interface = 'client',
      target = site.prefix6(),
      gateway = '::',
  })

  uci:save('network')

  local networks = uci:get_list('firewall', 'mesh', 'network')
  util.add_to_set(networks, 'client')
  uci:set_list('firewall', 'mesh', 'network', networks)

  networks = uci:get_list('firewall', 'drop', 'network')
  util.remove_from_set(networks, 'client')
  uci:set_list('firewall', 'drop', 'network', networks)

  uci:delete('firewall', 'local_node_dns')

  -- config mgmt-wifi to client (vlan 5)
  uci:delete('network', 'interface', 'mgmt')
  uci:section('network', 'interface', 'mgmt', {
    ifname = eth..'.5',
    type = 'bridge',
    proto = 'dhcpv6',
  })

  uci:delete_all('network', 'switch_vlan')


  -- Other VLANs
  for i=2, 13, 1 do
      uci:section('network', 'switch_vlan', 'vlan_' .. i, {
          vlan = i,
          ports = portlist,
          device = 'switch0',
      })
  end


  -- Set PVID for ports (should fix stp?)
  uci:delete_all('network', 'switch_port')
  for i=0, 6, 1 do
      uci:section('network', 'switch_port', 'port_' .. i, {
          pvid = 1,
          port = i,
      })
  end


  -- hacky
  local defaults = uci:get_first('firewall', 'defaults')
  uci:set('firewall', defaults, 'input', 'ACCEPT')


  -- allow inbound SSH from anywhere
  uci:section('firewall', 'rule', 'every_ssh', {
      name =  'every_ssh',
      dest_port = '22',
      proto = 'tcp',
      target = 'ACCEPT',
  })
  
  uci:section('firewall', 'rule', 'every_ICMPv6_in', {
      proto = 'icmp',
      icmp_type = {
          'echo-request',
          'echo-reply',
          'destination-unreachable',
          'packet-too-big',
          'time-exceeded',
          'bad-header',
          'unknown-header-type',
          'router-solicitation',
          'neighbour-solicitation',
          'router-advertisement',
          'neighbour-advertisement',
          '130/0', -- Multicast Listener Query
          '131/0', -- Multicast Listener Report
          '132/0', -- Multicast Listener Done
          '143/0', -- MLDv2
      },
      limit = '1000/sec',
      family = 'ipv6',
      target = 'ACCEPT',
  })

  uci:save('firewall')
  uci:save('network')
end
